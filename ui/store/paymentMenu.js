// Substitua completamente o conte칰do de: ui/store/paymentMenu.js

const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const hasFeature = require('../../utils/featureCheck.js');
// Importa o utilit치rio necess치rio
const { getCartSummary } = require('./dmConversationalFlow.js'); // << IMPORT CORRETA

// CR칈TICO: Fun칞칚o AGORA recebe a guilda para checagem de feature e l칩gica de sum치rio.
module.exports = async function generatePaymentMenu(cart, settings, coupon, guild) {
    // Adicionamos uma checagem de seguran칞a, embora o handler de chamada deva garantir isso.
    if (!guild || !guild.id) {
        throw new Error("Objeto Guild inv치lido passado para generatePaymentMenu.");
    }
    
    // Agora usa guild.id (e n칚o guild, que pode ser undefined se o handler for chamado incorretamente)
    const hasAutomation = await hasFeature(guild.id, 'STORE_AUTOMATION'); 
    
    const manualPayEnabled = settings.store_pix_key ? true : false;
    
    // Usa a fun칞칚o importada corretamente
    const { priceString } = getCartSummary(cart, coupon); 

    const embed = new EmbedBuilder()
        .setColor('#F1C40F')
        .setTitle('游눯 Finalizar Compra: Sele칞칚o de Pagamento')
        .setDescription(`**Total a Pagar:** ${priceString}`)
        .setFooter({ text: 'Selecione uma op칞칚o de pagamento abaixo.'})
        .setTimestamp();
        
    const buttons = new ActionRowBuilder();

    // Op칞칚o de Pagamento Autom치tico (Mercado Pago)
    if (hasAutomation && settings.store_mp_token) {
        embed.addFields({ name: 'Op칞칚o 1: PIX Autom치tico (Recomendado)', value: 'Pague e receba instantaneamente.' });
        buttons.addComponents(
            new ButtonBuilder()
                .setCustomId('store_pay_mercado_pago') // Formato curto
                .setLabel('PIX Autom치tico')
                .setStyle(ButtonStyle.Success)
                .setDisabled(false)
        );
    }

    // Op칞칚o de Pagamento Manual (PIX com Comprovante)
    if (manualPayEnabled) {
        embed.addFields({ name: 'Op칞칚o 2: PIX Manual', value: 'Pague e aguarde a aprova칞칚o da Staff.' });
        buttons.addComponents(
            new ButtonBuilder()
                .setCustomId('store_pay_manual')
                .setLabel('PIX Manual')
                .setStyle(ButtonStyle.Primary)
                .setDisabled(false)
        );
    }
    
    buttons.addComponents(
        new ButtonBuilder()
            .setCustomId('store_cart_cancel')
            .setLabel('Cancelar Compra')
            .setStyle(ButtonStyle.Danger)
    );

    return { embeds: [embed], components: [buttons] };
};