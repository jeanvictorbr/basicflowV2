// Substitua o conte√∫do em: ui/store/analyticsDashboard.js
const { ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

module.exports = function generateAnalyticsDashboard(stats, period, interaction) {
    let periodText = '√öltimos 7 dias';
    if (period === 30) periodText = '√öltimos 30 dias';
    if (period === 'all') periodText = 'Todo o Per√≠odo';


    const topProductsList = stats.topProducts.length > 0
        ? stats.topProducts.map((p, i) => `> **${i + 1}.** ${p.name} - **${p.count}** vendas`).join('\n')
        : '> Nenhuma venda registrada no per√≠odo.';

    const statusBreakdown = `> ‚úÖ **Aprovadas:** \`${stats.approvedCount}\`\n> ‚ùå **Canceladas:** \`${stats.cancelledCount}\``;

    return [
        {
            "type": 17, "accent_color": 5793266,
            "components": [
                { "type": 10, "content": `## üìà An√°lise de Vendas - StoreFlow` },
                {
                    "type": 9,
                    "accessory": { "type": 11, "media": { "url": interaction.guild.iconURL() } }, // THUMBNAIL DO SERVIDOR
                    "components": [
                        { "type": 10, "content": `> Exibindo dados de: **${periodText}**` }
                    ]
                },
                { "type": 14, "divider": true, "spacing": 2 },
                { "type": 10, "content": "### üìä KPIs Principais" },
                { "type": 10, "content": `> üí∞ **Faturamento Total:** \`R$ ${stats.totalRevenue.toFixed(2)}\`\n> üõí **Vendas Conclu√≠das:** \`${stats.approvedCount}\``},
                { "type": 14, "divider": true, "spacing": 1 },
                { "type": 10, "content": "### üèÜ Produtos Mais Vendidos" },
                { "type": 10, "content": topProductsList },
                { "type": 14, "divider": true, "spacing": 1 },
                { "type": 10, "content": "### üìã Status das Vendas" },
                { "type": 10, "content": statusBreakdown },
                { "type": 14, "divider": true, "spacing": 2 },
                {
                    "type": 1, "components": new ActionRowBuilder().addComponents(
                        new ButtonBuilder().setCustomId("store_analytics_period_7").setLabel("7 dias").setStyle(ButtonStyle.Secondary).setDisabled(period === 7),
                        new ButtonBuilder().setCustomId("store_analytics_period_30").setLabel("30 dias").setStyle(ButtonStyle.Secondary).setDisabled(period === 30),
                        new ButtonBuilder().setCustomId("store_analytics_period_all").setLabel("Todo o Per√≠odo").setStyle(ButtonStyle.Secondary).setDisabled(period === 'all'), // BOT√ÉO NOVO
                        new ButtonBuilder().setCustomId("open_store_menu").setLabel("Voltar").setStyle(ButtonStyle.Danger).setEmoji("‚Ü©Ô∏è")
                    ).toJSON().components
                }
            ]
        }
    ];
};